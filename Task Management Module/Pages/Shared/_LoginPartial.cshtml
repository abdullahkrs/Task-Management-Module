@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using System.Security.Claims

@{
	if (SignInManager.IsSignedIn(User))
	{
		var userName = User.Identity.Name;
		var userIdClaim = User.FindFirst(ClaimTypes.NameIdentifier);
		var userId = userIdClaim != null ? userIdClaim.Value : null;
		var isAdmin = User.IsInRole("Admin");
		<text>
			<script>
				var currentUser = "@userName";
				var currentUserId = "@userId";
				var isAdminUser = @isAdmin.ToString().ToLower();
			</script>
		</text>
	}
	else
	{
		var isAdmin =false;
		<text>
			<script>
				var currentUser = "";
				var currentUserId = "";
				var isAdminUser = @isAdmin.ToString().ToLower();
			</script>
		</text>
	}
}
<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		var userName = User.Identity.Name;

		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
		</li>
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
